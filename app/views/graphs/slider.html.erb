

<h1>Smooth Slider Tutorial</h1>
<h3>mbostock’s block #6499018</h3>


<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 200, right: 50, bottom: 200, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.bottom - margin.top,
    moving,
    currentValue = 0,
    targetValue = 70,
    alpha = .2;

var x = d3.scale.linear()
    .domain([0, 180])
    .range([0, width])
    .clamp(true);

var brush = d3.svg.brush()
    .x(x)
    .extent([0, 0])
    .on("brush", brushed);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height / 2 + ")")
    .call(d3.svg.axis()
      .scale(x)
      .orient("bottom")
      .tickFormat(function(d) { return d + "°"; })
      .tickSize(0)
      .tickPadding(12))
  .select(".domain")
  .select(function() { return this.parentNode.appendChild(this.cloneNode(true)); })
    .attr("class", "halo");

var slider = svg.append("g")
    .attr("class", "slider")
    .call(brush);

slider.selectAll(".extent,.resize")
    .remove();

slider.select(".background")
    .attr("height", height);

var handle = slider.append("circle")
    .attr("class", "handle")
    .attr("transform", "translate(0," + height / 2 + ")")
    .attr("r", 9);

slider
    .call(brush.event)
  .transition() // gratuitous intro!
    .duration(750)
    .call(brush.extent([targetValue, targetValue]))
    .call(brush.event);

function brushed() {
  if (d3.event.sourceEvent) { // not a programmatic event
    targetValue = x.invert(d3.mouse(this)[0]);
    move();
  } else {
    currentValue = brush.extent()[0];
    handle.attr("cx", x(currentValue));
    d3.select("body").style("background-color", d3.hsl(currentValue, .8, .8));
  }
}

function move() {
  if (moving) return false;
  moving = true;
  d3.timer(function() {
    currentValue = Math.abs(currentValue - targetValue) < 1e-3
        ? targetValue
        : targetValue * alpha + currentValue * (1 - alpha);

    slider
        .call(brush.extent([currentValue, currentValue]))
        .call(brush.event);

    return !(moving = currentValue !== targetValue);
  });
}

</script>